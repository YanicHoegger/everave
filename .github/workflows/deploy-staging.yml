name: Deploy to ACR and Create New Web App

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract short commit hash
        id: vars
        run: |
          echo "SHORT_HASH=${GITHUB_SHA::12}" >> $GITHUB_ENV
          echo "NEW_APP_NAME=${{ secrets.AZURE_APP_SERVICE_NAME }}-SLOT-${GITHUB_SHA::12}" >> $GITHUB_ENV

      - name: Log in to Azure using OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}

      - name: Build Docker image with commit hash tag
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/everaveserver:${{ github.sha }} --file everave.server/Dockerfile .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/everaveserver:${{ github.sha }}

      - name: Create new Web App with short commit hash
        run: |
          az webapp create \
            --name $NEW_APP_NAME \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --plan ${{ secrets.AZURE_APP_SERVICE_PLAN }} \
            --deployment-container-image-name ${{ secrets.ACR_LOGIN_SERVER }}/everaveserver:${{ github.sha }}

      - name: Configure container settings
        run: |
          az webapp config container set \
            --name $NEW_APP_NAME \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --docker-custom-image-name ${{ secrets.ACR_LOGIN_SERVER }}/everaveserver:${{ github.sha }} \
            --docker-registry-server-url https://${{ secrets.ACR_LOGIN_SERVER }}

      - name: Copy environment variables from main app to new app
        run: |
          MAIN_APP_SETTINGS=$(az webapp config appsettings list \
            --name ${{ secrets.AZURE_APP_SERVICE_NAME }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --query "[].{name:name, value:value}" -o json)

          echo "$MAIN_APP_SETTINGS" | jq -c '.[]' | while read i; do
            KEY=$(echo $i | jq -r '.name')
            VALUE=$(echo $i | jq -r '.value')
            az webapp config appsettings set \
              --name $NEW_APP_NAME \
              --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
              --settings $KEY="$VALUE"
          done
