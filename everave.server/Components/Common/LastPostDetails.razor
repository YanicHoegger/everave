@using everave.server.Forum
@using MongoDB.Bson
@using NUglify
@inject NavigationManager NavigationManager
@inject IForumService ForumService

@if (PostId != null && lastPostDetails != null)
{
    <div class="entry-preview" style="cursor: pointer;">
        <div class="entry-content" @onclick="NavigateToEntry">
            <p style="margin-bottom: 2px;">@lastPostDetails!.HtmlContent</p>
        </div>
        @if (ShowTopic)
        {
            <div class="entry-topic" @onclick="NavigateToTopic">
                <small>@lastPostDetails.TopicTitle</small>
            </div>
        }
        <div class="entry-meta text-muted">
            <small>Am @(lastPostDetails.CreatedAt.PrintCET()) von <UserLink UserId="@lastPostDetails!.Author.ToString()" /></small>
        </div>
    </div>
}
else
{
    <small class="text-muted">No entries yet</small>
}

@code {

    [Parameter, EditorRequired]
    public ObjectId? PostId { get; set; }
    [Parameter]
    public bool ShowTopic { get; set; } = true;

    private Details? lastPostDetails;
    private Topic? Topic;
    private Post? LastPost;

    protected override async Task OnInitializedAsync()
    {
        if (PostId == null)
            return;

        LastPost = await ForumService.GetPostById((ObjectId)PostId).ConfigureAwait(false);
        Topic = await ForumService.GetTopicByIdAsync(LastPost.TopicId).ConfigureAwait(false);

        lastPostDetails = new Details
            {
                TopicTitle = Topic.Title,
                CreatedAt = LastPost.CreatedAt,
                Author = LastPost.UserId,
                HtmlContent = TruncateHtml(LastPost.HtmlContent)
            };
    }

    private static string TruncateHtml(string html)
    {
        const int maxLength = 30;
        if (html.Contains("<"))
            html = Uglify.HtmlToText(html).Code;
        if (string.IsNullOrWhiteSpace(html))
            return "...";
        if (html.Length <= maxLength)
            return html;

        return html[..maxLength] + "...";
    }

    private async Task NavigateToEntry()
    {
        var page = await ForumService.GetPageOfPostAsync((ObjectId)PostId!);
        NavigationManager.NavigateTo($"/topic/{Topic!.Id.ToString()}/{page}#{PostId}");
    }

    private void NavigateToTopic()
    {
        NavigationManager.NavigateTo($"/topic/{Topic!.Id.ToString()}/");
    }

    public class Details
    {
        public string TopicTitle { get; set; } = string.Empty;
        public string HtmlContent { get; set; } = string.Empty;
        public DateTime CreatedAt { get; set; }
        public ObjectId Author { get; set; }
    }
}
