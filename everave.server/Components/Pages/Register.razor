@page "/register"
@rendermode InteractiveServer
@using System.ComponentModel.DataAnnotations
@using everave.server.UserManagement
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager Navigation

<EditForm Model="@registerModel" OnValidSubmit="HandleRegister" FormName="registerForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Benutzername</label>
        <InputText @bind-Value="registerModel.UserName" class="form-control" />
    </div>

    <div class="mb-3">
        <label>Password</label>
        <InputText @bind-Value="registerModel.Password" type="password" class="form-control" />
    </div>

    <div class="mb-3">
        <label>Confirm Password</label>
        <InputText @bind-Value="registerModel.ConfirmPassword" type="password" class="form-control" />
    </div>

    <button class="btn btn-success" type="submit">Registrieren</button>
</EditForm>

@code {
    private RegisterModel registerModel = new();

    private async Task HandleRegister()
    {
        if (registerModel.Password != registerModel.ConfirmPassword)
        {
            // Add custom error if needed
            return;
        }

        var user = new ApplicationUser { UserName = registerModel.UserName };
        var result = await UserManager.CreateAsync(user, registerModel.Password);

        if (result.Succeeded)
        {
            // await SignInManager.SignInAsync(user, isPersistent: false);
            Navigation.NavigateTo("/");
        }
        else
        {
            // Handle errors
        }
    }

    public class RegisterModel
    {
        [Required]
        public string UserName { get; set; } = string.Empty;

        [Required]
        [MinLength(6)]
        public string Password { get; set; } = string.Empty;

        [Required]
        public string ConfirmPassword { get; set; } = string.Empty;
    }
}